{"ast":null,"code":"var _jsxFileName = \"C:\\\\My Space\\\\Study\\\\Aparna_Workbook\\\\projectWork\\\\Blog Website\\\\coding-blog-app\\\\client\\\\src\\\\Components\\\\SinglePost\\\\SinglePost.js\",\n    _s = $RefreshSig$();\n\nimport { useLocation } from \"react-router\";\nimport { useEffect, useState, useContext } from \"react\";\nimport \"./SinglePost.css\";\nimport axios from \"axios\";\nimport { Context } from \"../../context/Context\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SinglePost = () => {\n  _s();\n\n  const location = useLocation(); //storing postid in path\n\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const {\n    user\n  } = useContext(Context);\n  const publicFolder = \"http://localhost:3000/images/\";\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n    };\n\n    getPost();\n  }, [path]);\n\n  const deletePostHandler = async () => {\n    try {\n      await axios.delete(\"/posts/\" + path, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (e) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePost\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePost-wrapper\",\n        children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"singlePost-wrapper-img\",\n          src: publicFolder + post.photo,\n          alt: \"post-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: post.title,\n          className: \"singlePost-title-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"singlePost-title\",\n          children: [post.title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"singlePost-edit\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"singlePost-icon fas fa-pen-alt\",\n              onClick: () => setUpdateMode(true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"singlePost-icon fas fa-trash-alt\",\n              onClick: deletePostHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePost-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"singlePost-author\",\n            children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n              to: `/?user=${post.username}`,\n              className: \"link\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"em\", {\n                children: post.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"singlePost-date\",\n            children: [\"Date: \", new Date(post.createdAt).toDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"singlePost-desc\",\n          children: post.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(SinglePost, \"xs7JL4oKuIn8mxMMLFGIhzF2qFM=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\nexport default SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["C:/My Space/Study/Aparna_Workbook/projectWork/Blog Website/coding-blog-app/client/src/Components/SinglePost/SinglePost.js"],"names":["useLocation","useEffect","useState","useContext","axios","Context","Link","SinglePost","location","path","pathname","split","post","setPost","user","publicFolder","title","setTitle","desc","setDesc","updateMode","setUpdateMode","getPost","res","get","data","deletePostHandler","delete","username","window","replace","e","photo","Date","createdAt","toDateString"],"mappings":"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","sourcesContent":["import { useLocation } from \"react-router\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport \"./SinglePost.css\";\r\nimport axios from \"axios\";\r\nimport { Context } from \"../../context/Context\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SinglePost = () => {\r\n  const location = useLocation();\r\n  //storing postid in path\r\n  const path = location.pathname.split(\"/\")[2];\r\n  const [post, setPost] = useState({});\r\n  const { user } = useContext(Context);\r\n  const publicFolder = \"http://localhost:3000/images/\";\r\n  const [title, setTitle] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [updateMode, setUpdateMode] = useState(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      const getPost = async () => {\r\n        const res = await axios.get(\"/posts/\" + path);\r\n        setPost(res.data);\r\n      };\r\n      getPost();\r\n    },\r\n    [path]\r\n  );\r\n\r\n  const deletePostHandler = async () => {\r\n    try {\r\n      await axios.delete(\"/posts/\" + path, {\r\n        data: { username: user.username }\r\n      });\r\n      window.location.replace(\"/\");\r\n    } catch (e) {}\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"singlePost\">\r\n        <div className=\"singlePost-wrapper\">\r\n          {post.photo && (\r\n            <img\r\n              className=\"singlePost-wrapper-img\"\r\n              src={publicFolder + post.photo}\r\n              alt=\"post-img\"\r\n            />\r\n          )}\r\n          {updateMode ? (\r\n            <input type=\"text\" value={post.title} className=\"singlePost-title-input\" />\r\n          ) : (\r\n            <h1 className=\"singlePost-title\">\r\n              {post.title}\r\n              {post.username === user?.username && (\r\n                <div className=\"singlePost-edit\">\r\n                  <i\r\n                    className=\"singlePost-icon fas fa-pen-alt\"\r\n                    onClick={() => setUpdateMode(true)}\r\n                  />\r\n                  <i\r\n                    className=\"singlePost-icon fas fa-trash-alt\"\r\n                    onClick={deletePostHandler}\r\n                  />\r\n                </div>\r\n              )}\r\n            </h1>\r\n          )}\r\n          <div className=\"singlePost-info\">\r\n            <span className=\"singlePost-author\">\r\n              Author:\r\n              <Link to={`/?user=${post.username}`} className=\"link\">\r\n                {\" \"}\r\n                <em>{post.username}</em>\r\n              </Link>\r\n            </span>\r\n            <span className=\"singlePost-date\">\r\n              Date: {new Date(post.createdAt).toDateString()}\r\n            </span>\r\n          </div>\r\n          <p className=\"singlePost-desc\">{post.desc}</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default SinglePost;\r\n"]},"metadata":{},"sourceType":"module"}